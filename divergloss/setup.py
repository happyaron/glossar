#!/usr/bin/python
# -*- coding: utf-8 -*-
"""
The divergloss setup script

Used to make the source archive, the distribution, or to install
divergloss.  It uses the distutils tools which provide standard means
of installation for the python modules.
"""
import os
import sys
import re
from glob import glob
from distutils.core import setup


#if os.name != "posix":
    #print "Installing on non-POSIX systems not implemented yet."
    #sys.exit(1)


data_files = []

from distutils.command.install import install as InstallBase
class Install (InstallBase, object):

    user_options = InstallBase.user_options
    user_options.extend([
        ('install-data-xml=', None,
            'installation subdirectory for XML data files'),
        ('install-data-mo=', None,
            'installation subdirectory for translation catalogs'),
    ])

    def initialize_options (self):

        self.install_data_xml = None
        self.install_data_mo = None
        super(Install, self).initialize_options()


    def run (self):

        global data_files

        build_base_pkg = os.path.join(self.build_lib, 'dg')
        self.mkpath(build_base_pkg)

        # Assemble locations of installed resources.
        doc_destination_dir_pattern = os.path.join(
            'share', 'doc', 'divergloss', '%s')

        html_files_pattern = os.path.join('doc', '*.html')
        css_files_pattern = os.path.join('doc', '*.css')
        html_source_files = glob(html_files_pattern) + glob(css_files_pattern)
        data_files += [(doc_destination_dir_pattern % 'guide',
                        html_source_files)]

        epydoc_files_pattern = os.path.join('dgproc', 'dg', 'doc', 'html', '*')
        data_files += [(doc_destination_dir_pattern % 'api',
                        glob(epydoc_files_pattern))]

        mo_source_dir = os.path.join('dgproc', 'mo')
        locale_destination_dir = os.path.join(
            self.install_data_mo, '%s', 'LC_MESSAGES')
        for langdir in os.listdir(mo_source_dir):
            mofile = os.path.join(mo_source_dir, langdir,
                                  'LC_MESSAGES', 'dgproc.mo')
            if os.path.isfile(mofile):
                modestdir =  locale_destination_dir % langdir
                data_files += [(modestdir, [mofile])]

        xml_source_dir_pattern = os.path.join('dgproc', 'dtd', '*.dtd')
        data_files += [(self.install_data_xml, glob(xml_source_dir_pattern))]

        # Assemble module with paths to installed resources.
        abs_data_base = os.path.abspath(self.install_data)
        paths = [
            ('mo', os.path.join(abs_data_base, self.install_data_mo)),
            ('dtd', os.path.join(abs_data_base, self.install_data_xml)),
        ]
        ofl = open(os.path.join(build_base_pkg, '_paths.py'), 'w')
        ofl.write('# -*- coding: UTF-8 -*-\n')
        ofl.write('# Autogenerated on installation.\n\n')
        for name, path in paths:
            ofl.write('%s = "%s"\n' % (name, path))
        ofl.close()

        super(Install, self).run()


setup(name='divergloss',  
      version='0.1',
      description='The Diversity Glossary Toolkit',
      author='Chusslove Illich',
      author_email='caslav.ilic@gmx.net',
      requires=['lxml'],
      license='GPLv3',
      package_dir={'': 'dgproc'},
      packages=['dg', 'dg.sieve'],
      package_data={'dg.sieve': ['html_extras/style/apricot/*.css',
                                 'html_bidict_extras/*.js',
                                 'html_bidict_extras/style/*.css.in',
                                 'html_bidict_extras/style/README']},
      url='http://groups.google.com/sorta',
      scripts=['dgproc/dgproc.py'],
      data_files=data_files,
      cmdclass={'install': Install},
      )
